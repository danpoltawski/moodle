YUI.add("moodle-availability_grade-form",function(a,b){M.availability_grade=M.availability_grade||{},M.availability_grade.form=a.Object(M.core_availability.plugin),M.availability_grade.form.grades=null,M.availability_grade.form.initInner=function(a){this.grades=a,this.nodesSoFar=0},M.availability_grade.form.getNode=function(b){this.nodesSoFar++;for(var c='<label class="form-group"><span class="p-r-1">'+M.util.get_string("title","availability_grade")+'</span> <span class="availability-group"><select name="id" class="custom-select"><option value="0">'+M.util.get_string("choosedots","moodle")+"</option>",d=0;d<this.grades.length;d++){var e=this.grades[d];c+='<option value="'+e.id+'">'+e.name+"</option>"}c+='</select></span></label> <br><span class="availability-group form-group"><label><input type="checkbox" class="form-check-input m-x-1" name="min"/>'+M.util.get_string("option_min","availability_grade")+'</label> <label><span class="accesshide">'+M.util.get_string("label_min","availability_grade")+'</span><input type="text" class="form-control m-x-1" name="minval" title="'+M.util.get_string("label_min","availability_grade")+'"/></label>%</span><br><span class="availability-group form-group"><label><input type="checkbox" class="form-check-input m-x-1" name="max"/>'+M.util.get_string("option_max","availability_grade")+'</label> <label><span class="accesshide">'+M.util.get_string("label_max","availability_grade")+'</span><input type="text" class="form-control m-x-1" name="maxval" title="'+M.util.get_string("label_max","availability_grade")+'"/></label>%</span>';var f=a.Node.create('<div class="d-inline-block form-inline">'+c+"</div>");void 0!==b.id&&f.one("select[name=id] > option[value="+b.id+"]")&&f.one("select[name=id]").set("value",""+b.id),void 0!==b.min&&(f.one("input[name=min]").set("checked",!0),f.one("input[name=minval]").set("value",b.min)),void 0!==b.max&&(f.one("input[name=max]").set("checked",!0),f.one("input[name=maxval]").set("value",b.max));var g=function(a,b){var c=a.ancestor("label").next("label").one("input"),d=a.get("checked");return c.set("disabled",!d),b&&d&&c.focus(),d};if(f.all("input[type=checkbox]").each(g),!M.availability_grade.form.addedEvents){M.availability_grade.form.addedEvents=!0;var h=a.one(".availability-field");h.delegate("change",function(){M.core_availability.form.update()},".availability_grade select[name=id]"),h.delegate("click",function(){g(this,!0),M.core_availability.form.update()},".availability_grade input[type=checkbox]"),h.delegate("valuechange",function(){M.core_availability.form.update()},".availability_grade input[type=text]")}return f},M.availability_grade.form.fillValue=function(a,b){a.id=parseInt(b.one("select[name=id]").get("value"),10),b.one("input[name=min]").get("checked")&&(a.min=this.getValue("minval",b)),b.one("input[name=max]").get("checked")&&(a.max=this.getValue("maxval",b))},M.availability_grade.form.getValue=function(a,b){var c=b.one("input[name="+a+"]").get("value");if(!/^[0-9]+([.,][0-9]+)?$/.test(c))return c;var d=parseFloat(c.replace(",","."));return d<0||d>100?c:d},M.availability_grade.form.fillErrors=function(a,b){var c={};this.fillValue(c,b),0===c.id&&a.push("availability_grade:error_selectgradeid"),void 0!==c.min&&"string"==typeof c.min||void 0!==c.max&&"string"==typeof c.max?a.push("availability_grade:error_invalidnumber"):void 0!==c.min&&void 0!==c.max&&c.min>=c.max&&a.push("availability_grade:error_backwardrange")}},"@VERSION@",{requires:["base","node","event","moodle-core_availability-form"]});